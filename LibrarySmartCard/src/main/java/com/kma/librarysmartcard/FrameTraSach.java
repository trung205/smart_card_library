/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kma.librarysmartcard;

import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.security.KeyFactory;
import java.security.PublicKey;
import java.security.Signature;
import java.security.interfaces.RSAPublicKey;
import java.security.spec.RSAPublicKeySpec;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author admin
 */
public class FrameTraSach extends javax.swing.JFrame {

    /**
     * Creates new form FrameTraSach
     */
    
    String masach[]= { "1","2","3",
                         "4","5","6","7"};
    
    public Validate validate = new Validate();
    private APDUGenerator card;
    public GlobalInfo gi;
    String hienThiRes;
    String[] listSach ;
    byte[] datareq ;
    String[] result ;
    BigInteger modulusPubkey,exponentPubkey ;
    UUID uuid = UUID.randomUUID();
    public Repository repo;
    public FrameTraSach() {
        initComponents();
        card = CardInstance.getInstance();
        repo = new Repository();
        gi = new GlobalInfo(card);
        showData();
         if(hienThiRes.equals("0") == false){
            jList1.setListData(result);
        }
        jList1.setFixedCellHeight(35);
        String id = gi.getID();
         try {
            modulusPubkey = new BigInteger(repo.getModul(id));
            exponentPubkey = new BigInteger(repo.getExpo(id));
            System.out.println("pubkey: "+modulusPubkey + " / "+exponentPubkey );
        } catch (SQLException ex) {
            Logger.getLogger(FrameMuonSach.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public boolean Verify_Digital_Signature(byte[] input,byte[] signatureToVerify) throws Exception{
        System.out.println("pubkey: "+modulusPubkey + " / "+exponentPubkey );
       
        KeyFactory keyFactory = KeyFactory.getInstance("RSA");
        RSAPublicKeySpec pubKeySpec = new RSAPublicKeySpec(modulusPubkey, exponentPubkey);
        PublicKey key = (RSAPublicKey) keyFactory.generatePublic(pubKeySpec);
        
        Signature signature = Signature.getInstance("SHA1withRSA");
        signature.initVerify(key);
        signature.update(input);
        return signature.verify(signatureToVerify);
    }
    
    private void showData(){
        hienThiRes = card.hienThiSachMuon();
        System.out.println("showData "+hienThiRes);
        if(hienThiRes.equals("0") == false){
            byte[] bytes = card.hexStringToByteArray(hienThiRes);
            String dataShow = new String(bytes , StandardCharsets.UTF_8);

            listSach = dataShow.split("#");
            System.out.println("sach " + listSach);
            result = dataShow.split("#");
            System.out.println("result " + result);
            for (int i = 0; i < result.length; i++) {
                switch(result[i]){
                    case "1":
                        result[i] = "1 - Thẻ thông minh - Ng Văn A";
                        break;
                    case "2":
                        result[i] = "2 - Android cơ bản - Ng Văn A";
                        break;
                    case "3":
                        result[i] = "3 - Toán cao cấp - Ng Văn A";
                        break;
                    case "4":
                        result[i] = "4 - Tin học đại cương - Ng Văn A";
                        break;
                    case "5":
                        result[i] = "5 - Lập trình driver - Ng Văn A";
                        break;
                    case "6":
                        result[i] = "6 - Hệ quản trị cơ sở dữ liệu - Ng Văn A";
                        break;
                    case "7":
                        result[i] = "7 - Lập trình hướng đối tượng - Ng Văn A";
                        break;
                    default:
                        break;
                }
            } 
        }else{
            result = null;
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pin = new javax.swing.JPasswordField();
        btnProcess = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(8, 109, 131));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Trả sách");

        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(339, 339, 339)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(8, 109, 131));

        jScrollPane1.setViewportView(jList1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Mã");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tên");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Tác giả");

        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("PIN");

        btnProcess.setBackground(new java.awt.Color(128, 223, 177));
        btnProcess.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnProcess.setForeground(new java.awt.Color(50, 50, 50));
        btnProcess.setText("Xác nhận");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(pin, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(69, 69, 69)
                        .addComponent(jLabel4)
                        .addGap(126, 126, 126)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)))
                .addContainerGap(165, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(102, 102, 102)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)))
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(pin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProcess))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        History history = new History();
        history.show();
        history.setLocationRelativeTo(null);
        history.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        Main main = new Main();
        main.show();
        main.setLocationRelativeTo(null);
        main.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        String pinTxt = pin.getText().trim();
        if(validate.isEmpty(pinTxt)) {
            JOptionPane.showMessageDialog(null, "Không để trống mã PIN");
            return;
        }    
        if(validate.isContainSpace(pinTxt)) {
            JOptionPane.showMessageDialog(null, "PIN không chứa space");
            return;
        }
        if(!validate.pinRequiredLength(pinTxt)) {
            JOptionPane.showMessageDialog(null, "Độ dài pin là 4 kí tự");
            return;
        }
        if(!validate.isLegitPin(pinTxt)) {
            JOptionPane.showMessageDialog(null, "Pin chỉ chứa các số từ 0-9");
            return;
        }
        try {
        boolean verify,trasachres,lichsures;
        String masachreq = String.format("%x", new BigInteger(1, jList1.getSelectedValue().getBytes()));
        String pinReq = String.format("%x", new BigInteger(1, pinTxt.getBytes()));
                    
        String ranData_Str = uuid.toString();
        String RanData = String.format("%x", new BigInteger(1, ranData_Str.getBytes()));
                    
        String req = pinReq+"26"+RanData;
        datareq = card.hexStringToByteArray(req);
        String sign = card.getSign(datareq);
        System.out.println("Sign: " + sign);
        if(sign.equals("")){
            JOptionPane.showMessageDialog(null, "Nhập sai mã pin , mời nhập lại !");
        }else{
            verify = Verify_Digital_Signature(datareq,card.hexStringToByteArray(sign));
            System.out.println("Verify: "+verify);
            if(verify){
            // TODO add your handling code here:
                List<String> list = new ArrayList<String>(Arrays.asList(listSach));
                System.out.println("list trc "+ list.toString());
                int maSach = jList1.getSelectedIndex();
                list.remove(maSach);
                System.out.println("list sau "+ list.toString());
                listSach = list.toArray(new String[0]);
                System.out.println("traSach "+Arrays.toString(listSach));
                String sachChuaTra = String.format("%x", new BigInteger(1, String.join("#", listSach).getBytes()));
                System.out.println("sachChuaTra "+ sachChuaTra.length());
                if(sachChuaTra.length() == 1){
                    trasachres = card.traSachCuoiCung();
                    System.out.println("tra cuoi");
                }else{
                    trasachres = card.traSach(card.hexStringToByteArray(sachChuaTra));             
                }
                if(trasachres){            
                    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
                    LocalDateTime now = LocalDateTime.now();
                    String timeNow = String.format("%x", new BigInteger(1, dtf.format(now).getBytes()));
                    String returnReq = masachreq + "202d20" + timeNow;
                    lichsures = card.themLichSu(card.hexStringToByteArray(returnReq));
                    if(lichsures){
                        JOptionPane.showMessageDialog(null, "Trả sách thành công !");
                        String id = gi.getID();
                        repo.insertHistory(id, result[jList1.getSelectedIndex()], dtf.format(now));
                        String hienThi = card.hienThiSachMuon();
                        if(hienThi.equals("0") == false){
                            byte[] bytesShow = card.hexStringToByteArray(hienThi);
                            String dataShow = new String(bytesShow , StandardCharsets.UTF_8);
                            result = dataShow.split("#");
                            for (int i = 0; i < result.length; i++) {
                                switch(result[i]){
                                    case "1":
                                        result[i] = "1 - Thẻ thông minh - Ng Văn A";
                                        break;
                                    case "2":
                                        result[i] = "2 - Android cơ bản - Ng Văn A";
                                        break;
                                    case "3":
                                        result[i] = "3 - Toán cao cấp - Ng Văn A";
                                        break;
                                    case "4":
                                        result[i] = "4 - Tin học đại cương - Ng Văn A";
                                        break;
                                    case "5":
                                        result[i] = "5 - Lập trình driver - Ng Văn A";
                                        break;
                                    case "6":
                                        result[i] = "6 - Hệ quản trị cơ sở dữ liệu - Ng Văn A";
                                        break;
                                    case "7":
                                        result[i] = "7 - Lập trình hướng đối tượng - Ng Văn A";
                                        break;
                                    default:
                                        break;
                                }
                            }
                            jList1.setListData(result);
                        }else{
                            jList1.setListData(new String[]{});
                        }
                            jList1.setFixedCellHeight(35);
                            jScrollPane1.setBorder(null);
                    }else{
                        JOptionPane.showMessageDialog(null, "Có lỗi trong quá trình thêm vào lịch sử, vui lòng thử lại !");
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Có lỗi trong quá trình trả sách, vui lòng thử lại !");
                }                   
            } else {
                JOptionPane.showMessageDialog(null, "Pin sai!");
            }
        }
        }catch(Exception e) {
            e.getMessage();
        }
    }//GEN-LAST:event_btnProcessActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameTraSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameTraSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameTraSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameTraSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameTraSach().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcess;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPasswordField pin;
    // End of variables declaration//GEN-END:variables
}
